// 

/* Page wrapper for sticky footer compatibility (works with global layout below) */
.page {
  width: 100%;
}

/* Two-column on desktop, stacked on mobile */
.customDoorLayout {
  display: grid;
  grid-template-columns: 1fr;
  gap: 1rem;
  padding: clamp(0.75rem, 2vw, 1.5rem);

  @media (min-width: 992px) {
    grid-template-columns: 1fr 1.2fr; /* preview | controls */
    align-items: start;
    gap: 1.25rem;
  }
}

/* Preview area */
.previewPane {
  display: grid;
  place-items: center;
  background: #f8f7f7;
  border-radius: 12px;
  padding: clamp(0.75rem, 2vw, 1.25rem);

  /* Keep the door nicely sized and scroll-safe */
  canvas, img, svg, .flipDoorRoot {
    max-width: min(90vw, 520px);
    width: 100%;
    height: 100%;
  }

  @media (min-width: 992px) {
    position: sticky;
    top: 1rem; /* so preview stays in view while you scroll the form */
  }
}

/* Right side controls */
.attributeContainer {
  color: rgba(84, 43, 5, 0.919);
  background: #fff;
  border-radius: 12px;
  box-shadow: 0 4px 8px rgba(0,0,0,0.08);
  padding: clamp(0.75rem, 2vw, 1.25rem);
  display: grid;
  gap: 1rem;
  text-align: left;
}

/* Sections */
.wrapContainer,
.dimensionsContainer {
  display: grid;
  gap: 0.5rem;

  h2 {
    font-size: clamp(1rem, 1.8vw, 1.25rem);
    margin: 0 0 0.25rem 0;
  }
}

/* Rows become grid so they wrap on phones */
.dimensionRow {
  display: grid;
  grid-template-columns: 1fr;
  gap: 0.75rem;
  color: #000;

  @media (min-width: 640px) {
    grid-template-columns: repeat(2, 1fr);
  }
  @media (min-width: 992px) {
    grid-template-columns: repeat(3, 1fr);
  }

  h3 {
    grid-column: 1 / -1;
    margin: 0.25rem 0;
    font-size: 0.95rem;
    font-weight: 600;
  }
}

/* Each field */
.dimensionRowItem {
  display: grid;
  gap: 0.25rem;

  label {
    font-size: 0.9rem;
    color: #4b5563;
  }
}

/* Make react-select fill its column */
.dimensionRowItem :global(.react-select__control),
.dimensionRowItem :global(.Select__control) {
  width: 100%;
}

/* Your custom option visuals */
.option {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem;
  cursor: pointer;

  &:hover { background-color: #f3f4f6; }

  img {
    width: 40px; height: 40px; object-fit: cover; border-radius: 4px;
  }

  .details {
    display: grid;
    .label { font-weight: 500; }
    .price { font-size: 0.875rem; color: #6b7280; }
  }
}

.singleValue {
  display: inline-flex; align-items: center; gap: 0.5rem;

  img { width: 24px; height: 24px; border-radius: 4px; object-fit: cover; }
  .label { font-weight: 500; }
  .price { font-size: 0.875rem; color: #9ca3af; margin-left: 0.25rem; }
}

/* Price + CTA area */
.buttonContainer {
  display: grid;
  gap: 0.75rem;

  /* Stick the CTA at the bottom on small screens */
  @media (max-width: 767.98px) {
    position: sticky;
    bottom: 0;
    background: #ffffffcc;
    backdrop-filter: blur(6px);
    padding: 0.75rem;
    border-radius: 12px;
    box-shadow: 0 -6px 18px rgba(0,0,0,0.06);
  }
}

.addToCartbutton {
  background-color: rgb(56, 115, 56);
  color: #fff;
  border: 0;
  border-radius: 10px;
  padding: 0.75rem 1rem;
  font-weight: 600;
  cursor: pointer;

  &:disabled { opacity: 0.6; cursor: not-allowed; }
}

/* Utilities */
h1, h2, h3, p, button { word-break: break-word; }
